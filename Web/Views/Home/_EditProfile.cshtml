@model Web.Models.UserModel


@*@using (Html.BeginForm("EditProfile", "Home"))
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(model => model.UserId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("ChangePassword", "Home"))
{
    @Html.HiddenFor(model => model.UserId)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<style>
    .form {
        background-color: rgba(19, 35, 47, 1);
    }
</style>

<script src="~/Plugins/sign-up-login-form/js/index.js"></script>

<div class="form">

    <h1>Edit your profile</h1>
    <div id="">

        <ul class="tab-group">
            <li class="tab active"><a href="#edit-info">Edit info</a></li>
            <li class="tab"><a href="#change-password">Change password</a></li>
        </ul>


        <div class="tab-content">
            <div id="edit-info">
                <form action="/Home/EditProfile" method="post">

                    <input type="hidden" name="UserId" value="@Model.UserId" />

                    <div class="field-wrap">
                        <label>
                            First Name<span class="req">*</span>
                        </label>
                        <input type="text" required autocomplete="off" name="FirstName" value="@Model.FirstName" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            Middle Name
                        </label>
                        <input type="text" autocomplete="off" name="MiddleName" value="@Model.MiddleName" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            Last Name<span class="req">*</span>
                        </label>
                        <input type="text" required autocomplete="off" name="LastName" value="@Model.LastName" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            Username<span class="req">*</span>
                        </label>
                        <input type="text" required autocomplete="off" name="Username" value="@Model.Username" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            E-mail<span class="req">*</span>
                        </label>
                        <input type="text" required autocomplete="off" name="Email" value="@Model.Email" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            Phone<span class="req">*</span>
                        </label>
                        <input type="text" required autocomplete="off" name="Phone" value="@Model.Phone" />
                    </div>

                    <button class="button button-block" />Update</button>

                </form>
            </div>

            <div id="change-password">
                <form action="/Home/ChangePassword" method="post">

                    <input type="hidden" name="UserId" value="@Model.UserId" />

                    <div class="field-wrap">
                        <label>
                            Old password<span class="req">*</span>
                        </label>
                        <input type="password" required autocomplete="off" name="OldPassword" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            New password<span class="req">*</span>
                        </label>
                        <input type="password" required autocomplete="off" name="Password" />
                    </div>

                    <div class="field-wrap">
                        <label>
                            Repeat new password<span class="req">*</span>
                        </label>
                        <input type="password" required autocomplete="off" name="OldPassword" />
                    </div>

                    <button class="button button-block" />Change password</button>

                </form>
            </div>
        </div>
    </div>
</div> <!-- /form -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
